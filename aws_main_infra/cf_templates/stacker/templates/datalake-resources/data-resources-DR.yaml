AWSTemplateFormatVersion: 2010-09-09
Description: DataLake Infrastructure Setup Template
Parameters:
  EnvironmentPrefix:
    Type: String
    Default: dev
    Description: Prefix for Env Name

Conditions:
  IsProdEnv: !Equals [!Ref EnvironmentPrefix, 'prod']

Resources:

  ReplicationRole:
    Type: "AWS::IAM::Role"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentPrefix}-dl-ReplicationRole'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      Path: /

  S3Bucket:
    Condition: IsProdEnv
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${EnvironmentPrefix}-datalake-s3-crr-bucket"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  DWHBucketPolicy:
    Condition: IsProdEnv
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:*'
            Effect: Deny
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': false

Outputs:
  S3BucketArn:
    Description: Arn of the S3 Bucket
    Value:  !If
      - IsProdEnv
      - !GetAtt S3Bucket.Arn
      - arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-S3BucketArn"

  ReplicationRoleArn:
    Description: S3 CRR Role
    Value: !GetAtt ReplicationRole.Arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ReplicationRoleArn"
